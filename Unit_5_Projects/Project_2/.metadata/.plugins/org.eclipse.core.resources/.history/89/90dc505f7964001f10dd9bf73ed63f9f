/*
 * main.c
 *
 *  Created on: 27 Aug 2024
 *      Author: Mina Karam
 */

#include <stdio.h>
#include <stdlib.h>
#include "FIFO.h"
#define DPRINTF(...) {fflush(stdout); \
		fflush(stdin); \
		printf(__VA_ARGS__); \
		fflush(stdout); \
		fflush(stdin);}

element_type st[50]; //Initialize the list
fifo_buf_t my_queue; // Initialize the queue


//APIs
void add_student_file();
void add_student_manually();
void find_rl();
void find_fn();
void find_c();
void tot_s();
void del_s();
void up_s();
void show_s();

int main(){
	fifo_init(&my_queue,st,50);
	uint8_t option;
	DPRINTF("Welcome to the Student Management System\n");
	while(1){
		char temp_text[4];
		char exit=0;
		DPRINTF("Choose The Task that you want  to perform\n");
		DPRINTF("1. Add the Student Details Manually\n");
		DPRINTF("2. Add the Student Details From Text File\n");
		DPRINTF("3. Find the Student Details By Roll Number\n");
		DPRINTF("4. Find the Student Details By First Name\n");
		DPRINTF("5. Find the Student Details By Course ID\n");
		DPRINTF("6. Find the Total number of Students\n");
		DPRINTF("7. Delete the Student Details By Roll Number\n");
		DPRINTF("8. Update the Student Details By Roll Number\n");
		DPRINTF("9. Show all information\n");
		DPRINTF("10. To Exit\n");
		DPRINTF("Enter your choice to perform the task: ");
		gets(temp_text);
		option = atoi(temp_text);
		DPRINTF("------------------------\n");
		switch (option) {
		case 1:
			DPRINTF("Add the Student Details\n");
			DPRINTF("------------------------\n");
			add_student_manually();
			DPRINTF("[INFO] The Total Number of Students is %d\n",my_queue.count);
			DPRINTF("[INFO] You can add up to %d Students\n",my_queue.length);
			DPRINTF("[INFO] You can add %d more Students\n",my_queue.length - my_queue.count);
			DPRINTF("------------------------\n");
			break;
		case 2:
			add_student_file();
			DPRINTF("[INFO] The Total Number of Students is %d\n",my_queue.count);
			DPRINTF("[INFO] You can add up to %d Students\n",my_queue.length);
			DPRINTF("[INFO] You can add %d more Students\n",my_queue.length - my_queue.count);
			DPRINTF("------------------------\n");
			break;
		case 3:

			break;
		case 4:

			break;
		case 5:

			break;
		case 6:

			break;
		case 7:

			break;
		case 8:

			break;
		case 9:
			show_s();
			break;
		case 10:
			exit=1;
			break;
		default:
			DPRINTF("No Such Option\n");
		}
		if(exit)
			break;

	}
	return 0;
}
void add_student_file(){
	element_type temp;
	FILE *file;
	char file_name[]="data.txt";//name of file

	file=fopen(file_name,"r");//give access to only read the file

	if(file==NULL){
		DPRINTF("Could not open the file\n");
		DPRINTF("------------------------\n");
	}
	else{
		while(fscanf(file,"%d %s %s %f %d %d %d %d %d",&temp.roll,temp.fname,temp.lname,&temp.GPA,
				&temp.cid[0],&temp.cid[1],&temp.cid[2],&temp.cid[3],&temp.cid[4])!=EOF){
			int taken=0;
			for(int i=0;i<my_queue.count;i++){
				if(st[i].roll==temp.roll)//check if the roll number is taken
				{
					DPRINTF("[ERROR] Roll Number %d is already taken\n",temp.roll);
					taken=1;
					break;
				}
			}
			if(taken==0){
				if(fifo_enqueue(&my_queue,temp) == FIFO_no_error){
					DPRINTF("[INFO] Roll Number %d saved Successfully\n",temp.roll);
				}
				else{
					DPRINTF("[ERROR] Failed to save Roll Number %d Details\n",temp.roll);
				}
			}
		}
	}
}
void add_student_manually(){
	element_type temp;
	char ch[15];
	DPRINTF("Enter the Roll Number: ");
	gets(ch);
	for(int i=0;i<my_queue.count;i++){
		if(st[i].roll==atoi(ch))//check if the roll number is taken
		{
			DPRINTF("[ERROR] Roll Number %d is already taken\n",atoi(ch));
			DPRINTF("------------------------\n");
			return;
		}
	}
	temp.roll=atoi(ch);
	DPRINTF("Enter the first name of student: ");
	gets(temp.fname);
	DPRINTF("Enter the last name of student: ");
	gets(temp.lname);
	DPRINTF("Enter the GPA of student: ");
	gets(ch);
	temp.GPA=atof(ch);
	DPRINTF("Enter the ID of each course\n");
	DPRINTF("Course 1 ID: ");
	gets(ch);
	temp.cid[0]=atoi(ch);
	DPRINTF("Course 2 ID: ");
	gets(ch);
	temp.cid[1]=atoi(ch);
	DPRINTF("Course 3 ID: ");
	gets(ch);
	temp.cid[2]=atoi(ch);
	DPRINTF("Course 4 ID: ");
	gets(ch);
	temp.cid[3]=atoi(ch);
	DPRINTF("Course 5 ID: ");
	gets(ch);
	temp.cid[4]=atoi(ch);
	if(fifo_enqueue(&my_queue,temp) == FIFO_no_error){
		DPRINTF("[INFO] Student Details is added Successfully\n");
	}
	else{
		DPRINTF("[ERROR] Failed to add Student Details\n");
	}
	DPRINTF("------------------------\n");
}
void find_rl(){

}
void find_fn(){

}
void find_c(){

}
void tot_s(){

}
void del_s(){

}
void up_s(){

}
void show_s(){
	if(fifo_is_empty(&my_queue)==FIFO_empty){//check if the queue is empty
		DPRINTF("[ERROR] No Students to Show\n");
		DPRINTF("------------------------\n");
	}
	else{
		for(int i=0;i<my_queue.count;i++){
			DPRINTF("Student first name: %s\n",st[i].fname);
			DPRINTF("Student last name: %s\n",st[i].lname);
			DPRINTF("Student roll number: %d\n",st[i].roll);
			DPRINTF("Student GPA number: %.2f\n",st[i].GPA);
			DPRINTF("Course 1 ID is %d\n",st[i].cid[0]);
			DPRINTF("Course 2 ID is %d\n",st[i].cid[1]);
			DPRINTF("Course 3 ID is %d\n",st[i].cid[2]);
			DPRINTF("Course 4 ID is %d\n",st[i].cid[3]);
			DPRINTF("Course 5 ID is %d\n",st[i].cid[4]);
			DPRINTF("------------------------\n");
		}
	}
}
